local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Florian Hub | RF24",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Loading...",
   LoadingSubtitle = "by Florian and s1p1er",
   Theme = "Ocean", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Florian Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})


local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image



local Toggle = Tab:CreateToggle({
   Name = "Boots Reach",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    local character = game.Players.LocalPlayer.Character
local reachDistance = 3
local bodyParts = {"LeftBoot", "RightBoot"}

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local reachBox = Instance.new("Part")
reachBox.Size = Vector3.new(reachDistance * 3, reachDistance * 3, reachDistance * 3)
reachBox.Position = humanoidRootPart.Position
reachBox.Anchored = true
reachBox.CanCollide = false
reachBox.Transparency = 1
reachBox.BrickColor = BrickColor.new("Medium stone grey")
reachBox.Parent = workspace

local function findAndTouchBalls(folder)
    for _, item in ipairs(folder:GetChildren()) do
        if (item:GetAttribute("networkOwner") or item:GetAttribute("lastTouch")) and item:IsA("BasePart") then
            local distance = (item.Position - humanoidRootPart.Position).Magnitude
            if distance <= reachDistance then
                for _, partName in ipairs(bodyParts) do
                    local bodyPart = character:FindFirstChild(partName)
                    if bodyPart then
                        bodyPart.CFrame = item.CFrame
                        -- Make the boots invisible by setting their transparency to 1
                        bodyPart.Transparency = 0  -- Fully transparent
                    end
                end
            end
        end
        if item:IsA("Folder") then
            findAndTouchBalls(item)
        end
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    reachBox.Position = humanoidRootPart.Position
    reachBox.Size = Vector3.new(reachDistance * 3, reachDistance * 3, reachDistance * 3)
    for _, partName in ipairs(bodyParts) do
        local bodyPart = character:FindFirstChild(partName)
        if bodyPart then
            bodyPart.Anchored = true
            bodyPart.CanCollide = false
            for _, constraint in ipairs(bodyPart:GetChildren()) do
                if constraint:IsA("WeldConstraint") then
                    constraint:Destroy()
                end
            end
            -- Make sure the boots are invisible even when not interacting with other parts
            bodyPart.Transparency = 0  -- Fully transparent
        end
    end
    findAndTouchBalls(workspace.game)
end)
})



local Toggle = Tab:CreateToggle({
   Name = "Infinity Stamina",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game:GetService("RunService").Heartbeat:Connect(function()
            local stam = game:GetService("AssetService").controllers.movementController.stamina
            stam.Value = 100
            end)
            
end
})
